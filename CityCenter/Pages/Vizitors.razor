@page "/visitors"
@inject NavigationManager Navigation
@using CityCenter.Data
@using CityCenter.Models
@using Microsoft.EntityFrameworkCore
@inject AppDbContext Db
@inject IJSRuntime JS
@implements IAsyncDisposable
@using System.Text.RegularExpressions;

<!DOCTYPE html>
<html lang="ru">
<head>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;700&family=Poppins:wght@400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Торговый Центр</title>
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    <style>
        .search-panel {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            background: rgba(10, 10, 10, 0.95);
            padding: 20px 30px;
            display: flex;
            justify-content: center;
            gap: 15px;
            z-index: 1001;
            box-shadow: 0 4px 10px rgba(0,0,0,0.8);
            transition: transform 0.3s ease, opacity 0.3s ease;
        }

            .search-panel input {
                width: 40%;
                padding: 14px 20px;
                border: none;
                border-radius: 10px;
                font-size: 1.1rem;
                background: #1e1e1e;
                color: white;
            }

            .search-panel button {
                padding: 14px 26px;
                background-color: #00aaff;
                color: white;
                font-size: 1.1rem;
                border: none;
                border-radius: 10px;
                cursor: pointer;
                transition: background-color 0.3s ease;
            }

                .search-panel button:hover {
                    background-color: #0077aa;
                }

        * {
            box-sizing: border-box;
        }

        .slider-container {
            position: relative;
            width: 100%;
            height: 700px;
            overflow: visible;
            margin-top: 100px; /* опустили ниже */
            max-width: 800px;
        }



        .slide {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            opacity: 0;
            transition: opacity 0.5s ease;
            height: 100%;
            display: flex;
            justify-content: center;
            align-items: center;
        }

            .slide.active {
                opacity: 1;
                z-index: 1;
            }


            .slide svg {
                width: 100%;
                height: 100%;
                max-width: 100%;
                max-height: 100%;
                display: block;
                margin: auto;
            }



        .controls,
        .floor-controls {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 20px;
            width: 100%;
            margin: 30px 0;
            padding: 0 30px;
        }

            .controls button,
            .floor-controls button {
                padding: 10px 26px;
                font-size: 1.2rem;
                border: none;
                border-radius: 10px;
                background-color: #00aaff;
                color: white;
                cursor: pointer;
                transition: background-color 0.3s ease;
            }

                .controls button:hover,
                .floor-controls button:hover {
                    background-color: #0077aa;
                }



        .floor-switcher {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 15px;
            margin: 20px 0;
        }

            .floor-switcher button {
                padding: 10px 20px;
                font-size: 1rem;
                background-color: #007bff;
                color: white;
                border: none;
                border-radius: 8px;
                cursor: pointer;
                transition: background-color 0.3s;
            }

                .floor-switcher button:hover {
                    background-color: #0056b3;
                }

        .floor-map {
            display: none;
        }

            .floor-map:not(.hidden) {
                display: block;
            }

        body {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            text-align: center;
            min-height: 100vh; /* Добавь вместо неё, чтобы сохранялась минимальная высота */
            overflow-x: hidden;
            margin: 0;
            padding: 0;
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #0a0a0a, #1e1e1e);
            background-size: cover;
            color: #fff;
        }


        .hidden {
            display: none !important;
        }


        .welcome-text {
            position: relative; /* Вместо absolute */
            top: auto;
            font-size: 3rem;
            font-weight: bold;
            text-shadow: 4px 4px 10px rgba(0, 0, 0, 0.7);
            max-width: 80%;
            margin-bottom: 30px; /* Добавляем отступ, чтобы текст не сливался с блоками */
        }

        .content {
            display: flex;
            justify-content: center; /* Центрирование блоков */
            flex-wrap: wrap; /* Чтобы блоки красиво располагались на маленьких экранах */
            gap: 20px;
            width: 100%;
            max-width: 2000px;
            padding: 20px;
        }


        .block {
            padding: 30px;
            border-radius: 20px;
            text-align: center;
            font-size: 1.6rem;
            font-weight: 600;
            color: white;
            background: linear-gradient(135deg, rgba(0, 0, 0, 1), rgba(40, 40, 40, 0.6));
            width: 22%;
            min-width: 200px;
            box-sizing: border-box;
            display: flex;
            justify-content: center;
            align-items: center;
            transition: transform 0.3s ease, box-shadow 0.3s ease, background 0.3s ease;
            box-shadow: 0 0 12px rgba(0, 0, 0, 0.8);
        }

            .block:hover {
                transform: scale(1.05);
                box-shadow: 0 0 20px #00aaff;
                background: linear-gradient(135deg, rgba(0, 0, 0, 0.8), rgba(0, 100, 150, 0.4));
            }



        .sidebar {
            width: 80px;
            height: 100vh;
            background: rgba(0, 0, 0, 0.8);
            position: fixed;
            left: 0;
            top: 0;
            transition: width 0.3s ease;
            overflow: hidden;
            padding-top: 80px;
        }

            .sidebar:hover {
                width: 250px;
            }

            .sidebar ul {
                list-style: none;
                padding: 0;
                margin: 0;
            }

                .sidebar ul li {
                    padding: 15px;
                    color: white;
                    display: flex;
                    align-items: center;
                    cursor: pointer;
                    transition: background 0.3s;
                }

                    .sidebar ul li:hover {
                        background: rgba(255, 255, 255, 0.2);
                    }

                    .sidebar ul li i {
                        font-size: 20px;
                        width: 40px;
                        text-align: center;
                    }

                    .sidebar ul li span {
                        opacity: 0;
                        transition: opacity 0.3s;
                        white-space: nowrap;
                    }

            .sidebar:hover ul li span {
                opacity: 1;
            }

        .map-container {
            margin: 20px auto; /* Центрирование по горизонтали */
            width: 100%;
            max-width: 800px; /* Ограничение максимальной ширины */
            display: flex;
            justify-content: center;
            align-items: center;
            overflow: visible;
        }

            .map-container svg {
                width: 100%;
                height: auto;
                max-width: 100%; /* Чтобы не выходила за границы */
            }


        .svg-container svg {
            width: 100vw;
            height: 80vh;
        }



        .room-info {
            background: linear-gradient(135deg, rgba(20, 20, 20, 0.95), rgba(40, 40, 40, 0.95));
            padding: 50px;
            border-radius: 25px;
            box-shadow: 0 0 40px rgba(0, 170, 255, 0.6);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            font-size: 1.4rem;
            color: #fff;
            max-width: 900px;
            width: 100%;
            margin: 0 auto;
        }

            .room-info:hover {
                transform: scale(1.03);
                box-shadow: 0 0 50px #00aaff;
            }

            .room-info b {
                color: #00ffcc;
            }

        .btn {
            margin-top: 30px;
            padding: 14px 26px;
            background-color: #00aaff;
            border: none;
            border-radius: 12px;
            color: white;
            font-size: 1.2rem;
            cursor: pointer;
            transition: background 0.3s ease;
        }

            .btn:hover {
                background-color: #0088cc;
            }

        /* Подсветка выбранного помещения */
        svg .selected {
            fill: #00ff88 !important;
            stroke: #00cc77 !important;
            filter: drop-shadow(0 0 10px #00ff88);
        }

        /* Подсветка при наведении без сдвига и масштабирования */
        svg g[id^="Store-"]:hover {
            cursor: pointer;
            transition: filter 0.2s ease;
            filter: drop-shadow(0 0 6px #00aaff);
        }

            svg g[id^="Store-"]:hover rect {
                fill: rgba(0, 170, 255, 0.15) !important;
                stroke: #00aaff !important;
                transition: all 0.3s ease;
            }

        .svg-disabled {
            opacity: 0.25;
            pointer-events: none;
            cursor: not-allowed;
            filter: grayscale(1);
        }

        svg g.svg-disabled:hover {
            transform: none !important;
            filter: none !important;
            cursor: not-allowed !important;
        }

   


    

        .screen {
            padding-top: 80px; /* или больше, если нужно */
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: flex-start; /* было center — это центрировало всё по вертикали */
            padding-left: 100px;
            padding-right: 40px;
            box-sizing: border-box;
        }




        .back-button.top-left {
            position: absolute;
            top: 30px;
            left: 30px;
            background: transparent;
            border: none;
            color: white;
            text-decoration: underline;
            font-size: 1rem;
            cursor: pointer;
            z-index: 1000;
        }

        .login-screen {
            position: fixed;
            inset: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            background: rgba(0, 0, 0, 0.7);
            backdrop-filter: blur(8px);
            z-index: 999;
            animation: fadeIn 0.5s ease-out;
        }


        .login-box {
            position: relative;
            background: linear-gradient(135deg, rgba(20, 20, 20, 0.95), rgba(40, 40, 40, 0.95));
            padding: 100px 120px;
            border-radius: 24px;
            box-shadow: 0 0 40px rgba(0, 0, 0, 0.8);
            min-width: 600px;
            max-width: 700px;
            width: 100%;
            color: #fff;
            font-size: 1.4rem;
            transition: transform 0.3s ease;
        }

            .login-box h2 {
                margin-bottom: 30px;
                font-size: 2.8rem;
                font-weight: 600;
            }

        .login-input {
            display: block;
            margin: 18px auto;
            padding: 22px;
            width: 100%;
            border: none;
            border-radius: 10px;
            font-size: 1.3rem;
            font-family: 'Poppins', sans-serif;
            background-color: #1e1e1e;
            color: #fff;
            transition: box-shadow 0.3s ease;
        }

            .login-input:focus {
                outline: none;
                box-shadow: 0 0 10px #00aaff;
            }

        .login-button {
            background: #00aaff;
            color: white;
            border: none;
            padding: 20px 40px;
            margin-top: 25px;
            border-radius: 14px;
            cursor: pointer;
            font-weight: bold;
            font-size: 1.4rem;
            width: 100%;
            transition: background 0.3s ease;
        }

            .login-button:hover {
                background: #0088cc;
            }

        .back-button {
            background: transparent;
            border: none;
            color: white;
            margin-top: 15px;
            text-decoration: underline;
            cursor: pointer;
        }

            .back-button.inside {
                position: absolute;
                top: 25px;
                left: 25px;
                background: transparent;
                border: none;
                color: #ccc;
                text-decoration: underline;
                font-size: 1.2rem;
                cursor: pointer;
                transition: color 0.3s ease;
            }

                .back-button.inside:hover {
                    color: #fff;
                }

        .login-links {
            margin-top: 25px;
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .login-link {
            color: #aaa;
            font-size: 1.2rem;
            text-decoration: underline;
            cursor: pointer;
            transition: color 0.3s;
        }

            .login-link:hover {
                color: #fff;
            }


        .scroll-down {
            margin-top: 40px;
            cursor: pointer;
            animation: bounce 2s infinite;
            font-size: 2.5rem;
            color: #00aaff;
        }

        /*  @@keyframes bounce {
                    0%, 20%, 50%, 80%, 100% {
                        transform: translateY(0);
                    }

                    40% {
                        transform: translateY(10px);
                    }

                    60% {
                        transform: translateY(5px);
                    }
                } */

        .footer {
            background: #111;
            color: #ccc;
            padding: 40px 20px;
            width: 100%;
            border-top: 2px solid #333;
        }

        .footer-content {
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
            display: flex;
            flex-wrap: wrap;
            gap: 30px;
            justify-content: space-between;
        }

        .footer-section {
            flex: 1 1 250px;
        }

            .footer-section h3 {
                color: #00aaff;
                margin-bottom: 10px;
                font-size: 1.5rem;
            }

            .footer-section p {
                margin: 5px 0;
                font-size: 1.1rem;
            }

        .vk-link {
            color: #ccc;
            text-decoration: none;
            font-size: 1.1rem;
        }

            .vk-link i {
                color: #4c75a3;
                margin-right: 8px;
                font-size: 1.2rem;
            }

            .vk-link:hover {
                color: #fff;
            }

        .floor-label {
            font-size: 24px;
            margin-bottom: 10px;
        }

        .map-controls {
            margin-bottom: 15px;
        }

            .map-controls button {
                margin: 0 10px;
                padding: 6px 12px;
                font-size: 16px;
            }

        h2 {
            margin-bottom: -4vh; /* или больше, если нужно */
            z-index: 2;
            position: relative;
        }

    </style>
</head>
<body>

    <nav class="sidebar">
        <div id="search-panel" class="search-panel hidden">
            <input type="text" id="search-input" placeholder="Введите запрос..." onkeydown="handleKeyPress(event)">
            <div id="search-results" class="search-results"></div>
        </div>


        <ul>
            <li onclick="showSection('home')"><i class="fas fa-bars"></i> <span>Главная</span></li>
            <li @onclick="NavigateToReg"><i class="fas fa-id-card"></i> <span>Регистрация</span></li>
            @*   <li><i class="fas fa-user"></i> <span>Профиль</span></li> *@
            <!-- Вставьте в <ul> меню: -->
            <li @onclick="NavigateToLogin"><i class="fas fa-sign-in-alt"></i> <span>Вход</span></li>

            <li onclick="toggleSearchPanel()"><i class="fas fa-search"></i> <span>Поиск</span></li>

            <li onclick="showSection('mall-map')"><i class="fas fa-map-marked-alt"></i> <span>Карта</span></li>
        </ul>
    </nav>

    <div id="home" class="screen">
        <div class="welcome-text">Добро пожаловать в Сити Центр</div>

        <div class="content">
            <div class="block">
                <span @onclick="NavigateToShops">Магазины</span>
            </div>
            <div class="block">
                <span>Кафе и рестораны</span>
            </div>
            <div class="block">
                <span>Мероприятия</span>
            </div>
            <div class="block">
                <span>Сервисы и услуги</span>
            </div>
        </div>
        <!-- Стрелка вниз -->
        <div class="scroll-down" onclick="scrollToMap()">
            <i class="fas fa-chevron-down"></i>
        </div>



        <h2 id="mall-map" style="text-align:center; margin-top: 80px;">Карта ТЦ</h2>


        <div class="svg-container">
            @((MarkupString)SvgContent)
        </div>


        <div class="floor-controls">
            <button @onclick="Prev">← Назад</button>
            <span>@floors[currentIndex]</span>
            <button @onclick="Next">Вперед →</button>
        </div>

    </div>

    <!-- Скрипт для переключения -->
    <script>
        function toggleSearchPanel() {
            const panel = document.getElementById('search-panel');
            panel.classList.toggle('hidden');
        }

        function performSearch() {
            const query = document.getElementById('search-input').value;
            alert("Поиск: " + query);
            document.getElementById('search-panel').classList.add('hidden');
        }


        function handleKeyPress(event) {
            if (event.key === 'Enter') {
                performSearch();
            }
        }
        function showSection(sectionId) {
            document.querySelectorAll('.screen, .login-screen, .register-screen').forEach(el => el.classList.add('hidden'));
            const target = document.getElementById(sectionId);
            if (target) target.classList.remove('hidden');
        }

        function scrollToMap() {
            const map = document.getElementById('mall-map');
            if (map) {
                map.scrollIntoView({ behavior: 'smooth' });
            }
        }

        document.addEventListener('click', function (event) {
            const panel = document.getElementById('search-panel');
            if (!panel.contains(event.target) && !event.target.closest('.sidebar')) {
                panel.classList.add('hidden');
            }
        });

    </script>



    <!-- Экран входа -->
    <div id="login-screen" class="login-screen hidden">
        <div class="login-box">
            <button class="back-button inside" onclick="showSection('home')">← Назад</button>

            <h2>Вход в систему</h2>
            <input type="text" placeholder="Логин" class="login-input" />
            <input type="password" placeholder="Пароль" class="login-input" />
            <button class="login-button">Войти</button>

            <div class="login-links">
                <a href="#" class="login-link">Забыли пароль?</a>
                <a href="#" class="login-link" onclick="showSection('register-screen')">Ещё нет аккаунта? Зарегистрироваться</a>
            </div>
        </div>
    </div>

    <!-- Экран регистрации -->
    <div id="register-screen" class="login-screen hidden">
        <div class="login-box">
            <button class="back-button inside" onclick="showSection('home')">← Назад</button>

            <h2>Регистрация</h2>
            <input type="text" id="regFullName" placeholder="ФИО" class="login-input" />
            <input type="email" id="regEmail" placeholder="Email" class="login-input" />
            <input type="text" id="regPhone" placeholder="Телефон" class="login-input" />
            <input type="text" id="regLogin" placeholder="Логин" class="login-input" />
            <input type="password" id="regPassword" placeholder="Пароль" class="login-input" />
            <input type="password" id="regRepeatPassword" placeholder="Повторите пароль" class="login-input" />

            <button class="login-button" onclick="registerUser()">Зарегистрироваться</button>


            <div class="login-links">
                <a href="#" class="login-link" onclick="showSection('login-screen')">Уже есть аккаунт? Войти</a>
            </div>
        </div>
    </div>


</body>
<footer class="footer">
    <div class="footer-content">
        <div class="footer-section">
            <h3>График работы</h3>
            <p>Пн-Пт с 10:00 - 21:00</p>
            <p>Сб-Вс с 10:00 - 20:00</p>
        </div>
        <div class="footer-section">
            <h3>Контакты</h3>
            <p>Телефон: +7 (343) 350-16-42</p>
            <p>
                <a href="https://vk.com/tkcitycenter" target="_blank" class="vk-link">
                    <i class="fab fa-vk" style="color: #1471b8;"</i> Мы ВКонтакте
                </a>
            </p>
        </div>
        <div class="footer-section">
            <h3>Мы на карте</h3>
            <iframe src="https://yandex.ru/map-widget/v1/?um=constructor%3Add899fd962263cd1eab940908e9aca477fca3498c3eaa82faa2b1151666dd29c&amp;source=constructor" width="400" height="150" frameborder="0"></iframe>
        </div>
    </div>
</footer>

</html>

@code {
    private int currentIndex = 0;
    private DotNetObjectReference<Vizitors>? dotNetRef;

    private string SvgContent = "";
    private Dictionary<string, Помещения> Доступные = new();
    private Помещения? SelectedRoom;
    private ElementReference RoomInfoRef;

    private List<string> floors = new() { "Этаж 1", "Этаж 2", "Этаж 3", "Этаж 4" };

    private async void Prev()
    {
        currentIndex = (currentIndex - 1 + floors.Count) % floors.Count;
        await LoadSvgForFloor(currentIndex + 1); // Этажи начинаются с 1
    }

    private async void Next()
    {
        currentIndex = (currentIndex + 1) % floors.Count;
        await LoadSvgForFloor(currentIndex + 1);
    }

    [JSInvokable]
    public async Task SetSelectedRoom(string id)
    {
        if (Доступные.TryGetValue(id, out var room))
        {
            SelectedRoom = room;
            StateHasChanged();
            await Task.Delay(300);
        }
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            dotNetRef = DotNetObjectReference.Create(this);
            await JS.InvokeVoidAsync("mapRent.setupClickHandler", dotNetRef);
        }
    }



    private int currentFloor = 4;
    private async Task LoadSvgForFloor(int floor)
    {
        SelectedRoom = null;

        string path = $"wwwroot/images/Frame{floor}.svg";
        SvgContent = await File.ReadAllTextAsync(path);

        var всеИзБд = await Db.Помещенияs.ToListAsync();
        var доступные = всеИзБд.Where(p => p.ДоступноДляАренды && p.Этаж == floor).ToList();
        Доступные = доступные.ToDictionary(p => p.Расположение, p => p);

        var svgIds = Regex.Matches(SvgContent, "id=\"(Store-[\\w-]+)\"")
                          .Select(m => m.Groups[1].Value)
                          .Distinct()
                          .ToList();
        foreach (var id in svgIds)
        {
            var помещение = всеИзБд.FirstOrDefault(p => p.Расположение == id);

            if (помещение == null || помещение.ДоступноДляАренды == false)
            {
                // отключаем
                SvgContent = Regex.Replace(
                  SvgContent,
                  $"<g([^>]*?)id=\"{id}\"",
                  match =>
                  {
                      var gTag = match.Value;
                      gTag = Regex.Replace(gTag, @"class\s*=\s*""[^""]*""", "");
                      return Regex.Replace(gTag, "<g", "<g class=\"svg-disabled\"");
                  });
            }
            else if (!string.IsNullOrWhiteSpace(помещение.СсылкаНаМагазин)) // если у арендатора есть сайт
            {
                // оборачиваем в <a href="...">
                SvgContent = Regex.Replace(
                    SvgContent,
                    $"(<g[^>]*id=\"{id}\"[^>]*>.*?</g>)",
                    $"<a href=\"{помещение.СсылкаНаМагазин}\" target=\"_blank\">$1</a>",
                    RegexOptions.Singleline);
            }
        }

        StateHasChanged();
    }
    protected override async Task OnInitializedAsync()
    {
        await LoadSvgForFloor(currentIndex + 1);
    }
    public async ValueTask DisposeAsync()
    {
        dotNetRef?.Dispose();
    }

    // Переход на страницу для бизнеса (например, авторизация)
    private void NavigateToLogin()
    {
        Navigation.NavigateTo("/login");
    }

    private void NavigateToReg()
    {
        Navigation.NavigateTo("/registration");
    }

    private void NavigateToShops()
    {
        Navigation.NavigateTo("/shops");
    }
}